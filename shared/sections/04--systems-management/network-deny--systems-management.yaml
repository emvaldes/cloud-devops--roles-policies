AWSTemplateFormatVersion: "2010-09-09"
Description: "Common Deny Policy — Systems Management (SSM high-risk ops, tag-gating, automation, instance profile enforcement)"

Parameters:

  ManagedPolicyName:
    Type: String
    Default: network-deny--systems-management
    Description: "IAM managed policy name for Systems Management deny guardrails"

  CustomPolicyPath:
    Type: String
    Default: "/managed/network/"
    AllowedPattern: "^/([A-Za-z0-9+=,.@_-]+/)*$"
    Description: "IAM path prefix for policies (use / to disable)"

Resources:

  NetworkDenySystemsManagementPolicy:

    Type: AWS::IAM::ManagedPolicy
    Properties:

      ManagedPolicyName: !Ref ManagedPolicyName
      Path: !Ref CustomPolicyPath
      Description: "Deny guardrails for Systems Management (SSM) and related EC2 enforcement"

      PolicyDocument:
        Version: "2012-10-17"
        Statement:

## -------------------------------------------------------------------------- ##
## 4 - Systems Management

          ## -------------------------------------------------------------------
          ## SSM: keep only high-risk ops denied; permit associations, MW, Automation, Parameters
          ## -------------------------------------------------------------------
          - Sid: DenySsmHighRiskAdminOnly
            Effect: Deny
            Action:
              - ssm:DeleteComplianceItems      ## prevent manual tampering of compliance data
              - ssm:DeleteInventory            ## prevent deletion of collected inventory
              - ssm:PutInventory               ## prevent spoofing/faking inventory records
              - ssm:UpdateInstanceInformation  ## prevent manual instance info updates (agent-only)
              - ssm:UpdateServiceSetting       ## prevent account-level SSM service setting changes
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Extra high-risk account-wide features off
          ## -------------------------------------------------------------------
          - Sid: DenySsmHighRiskExtrasTight
            Effect: Deny
            Action:
              - ssm:CreateActivation           ## block hybrid activation bootstrap (rogue host onboarding)
              - ssm:RegisterManagedInstance    ## block hybrid managed instance registration
              - ssm:DeregisterManagedInstance  ## block deregistration that hides assets
              - ssm:CreateResourceDataSync     ## block cross-account/region telemetry export
              - ssm:UpdateResourceDataSync     ## block changes to existing sync targets
              - ssm:DeleteResourceDataSync     ## block deletion of data sync (audit trail preservation)
              - ssm:PutComplianceItems         ## block manual injection of compliance results
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Enforce tag-gating for sessions/RunCommand — deny if tag is MISSING
          ## -------------------------------------------------------------------
          - Sid: DenySsmRunWhenTagMissing
            Effect: Deny
            Action:
              - ssm:StartSession  ## block session start if tag is missing
              - ssm:SendCommand   ## block RunCommand if tag is missing
            Resource: "*"
            Condition:
              "Null":
                ssm:resourceTag/NetworkManaged: "true"  ## key absent -> deny

          ## -------------------------------------------------------------------
          ## Enforce tag-gating for sessions/RunCommand — deny if tag value != "true"
          ## -------------------------------------------------------------------
          - Sid: DenySsmRunWhenTagNotTrue
            Effect: Deny
            Action:
              - ssm:StartSession  ## block session start if tag != true
              - ssm:SendCommand   ## block RunCommand if tag != true
            Resource: "*"
            Condition:
              StringNotEquals:
                ssm:resourceTag/NetworkManaged: "true"  ## present but not "true" -> deny

          ## -------------------------------------------------------------------
          ## Disallow Automation when an assume role is supplied
          ## -------------------------------------------------------------------
          - Sid: DenySsmAutomationWithAssumeRole
            Effect: Deny
            Action:
              - ssm:StartAutomationExecution       ## block automation docs from assuming roles
            Resource: "*"
            Condition:
              "Null":
                ssm:AutomationAssumeRole: "false"  ## if field present (role supplied) -> deny

          ## -------------------------------------------------------------------
          ## Require an instance profile on every EC2 launch
          ## -------------------------------------------------------------------
          - Sid: DenyRunInstancesWithoutInstanceProfile
            Effect: Deny
            Action: ec2:RunInstances         ## block EC2 launches without an attached profile
            Resource: "*"
            Condition:
              "Null":
                ec2:InstanceProfile: "true"  ## deny when instance profile is absent

## -------------------------------------------------------------------------- ##

Outputs:

  NetworkDenySystemsManagementPolicyArn:
    Description: "ARN of the Systems Management deny IAM managed policy"
    Value: !Ref NetworkDenySystemsManagementPolicy
