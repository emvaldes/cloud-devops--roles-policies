AWSTemplateFormatVersion: "2010-09-09"
Description: "Common Allow Policy — Development: Source & Orchestration (CloudFormation, CodeCommit, CodePipeline, SNS/SQS)"

Parameters:

  ManagedPolicyName:
    Type: String
    Default: network-allow--workflow-orchestration
    Description: "IAM managed policy name for Development Source & Orchestration allows"

  CustomPolicyPath:
    Type: String
    Default: "/managed/network/"
    AllowedPattern: "^/([A-Za-z0-9+=,.@_-]+/)*$"
    Description: "IAM path prefix for policies (use / to disable)"

Resources:

  NetworkAllowOrchestrationPolicy:

    Type: AWS::IAM::ManagedPolicy
    Properties:

      ManagedPolicyName: !Ref ManagedPolicyName
      Path: !Ref CustomPolicyPath
      Description: "Allow baseline for Development Source & Orchestration (CloudFormation, CodeCommit, CodePipeline, SNS/SQS)."

      PolicyDocument:
        Version: "2012-10-17"
        Statement:

## -------------------------------------------------------------------------- ##
## 7 - Development — Source & Orchestration

          ## -------------------------------------------------------------------
          ## IAM: permit CFN to assume only CFN exec roles (boundary enforces CFN-only)
          ## -------------------------------------------------------------------
          - Sid: PassRoleForCloudFormationExecRoles
            Effect: Allow
            Action: iam:PassRole  ## allow passing exec roles to CFN
            Resource:
              - arn:aws:iam::*:role/cfn-*                          ## customer-created CFN execution roles (any path except service-role/)
              - arn:aws:iam::*:role/cloudformation-*               ## alt customer naming for CFN exec roles
              - arn:aws:iam::*:role/service-role/cfn-*             ## CFN exec roles under 'service-role/' path
              - arn:aws:iam::*:role/service-role/cloudformation-*  ## alt naming under 'service-role/' path
            Condition:
              StringEquals:
                iam:PassedToService: cloudformation.amazonaws.com  ## CFN target only

          ## -------------------------------------------------------------------
          ## S3: only CFN may set/delete bucket policies (change control)
          ## -------------------------------------------------------------------
          - Sid: S3BucketPolicyViaCloudFormationOnly
            Effect: Allow
            Action:
              - s3:GetBucketPolicy        ## read current bucket policy
              - s3:GetBucketPolicyStatus  ## read public access status
              - s3:PutBucketPolicy        ## set/replace bucket policy
              - s3:DeleteBucketPolicy     ## remove bucket policy
            Resource:
              - arn:aws:s3:::network-*
            Condition:
              ForAnyValue:StringEquals:
                aws:CalledVia: cloudformation.amazonaws.com  ## only when invoked by CFN

          ## -------------------------------------------------------------------
          ## IaC: deploy with CloudFormation (create/update stacks & change sets)
          ## -------------------------------------------------------------------
          - Sid: CloudFormationDeploy
            Effect: Allow
            Action:
              - cloudformation:CreateStack               ## create new stack from a template/params
              - cloudformation:UpdateStack               ## update an existing stack
              - cloudformation:CreateChangeSet           ## stage a set of changes for review/approval
              - cloudformation:ExecuteChangeSet          ## apply a previously created change set
              - cloudformation:DeleteChangeSet           ## remove an unused change set
              - cloudformation:Describe*                 ## read stacks/changes/events/status
              - cloudformation:Get*                      ## fetch templates/stack policy/outputs
              - cloudformation:List*                     ## enumerate stacks, change sets, exports
              - cloudformation:ValidateTemplate          ## schema/structural validation of a template
              - cloudformation:DetectStackDrift          ## detect drift at the stack level
              - cloudformation:DetectStackResourceDrift  ## detect drift at individual resources
              - cloudformation:CancelUpdateStack         ## cancel an in-flight update
              - cloudformation:ContinueUpdateRollback    ## resume a failed rollback to completion
            Resource: "*"

          ## -------------------------------------------------------------------
          ## SCM: CodeCommit read/write (Git pull/push + basic PR ops)
          ## -------------------------------------------------------------------
          - Sid: CodeCommitReadWrite
            Effect: Allow
            Action:
              - codecommit:Get*                           ## read repo/branch/commit/PR metadata
              - codecommit:List*                          ## list repos/branches/commits/PRs
              - codecommit:GitPull                        ## clone/fetch via Git
              - codecommit:GitPush                        ## push commits/refs via Git
              - codecommit:CreatePullRequest              ## open a pull request
              - codecommit:UpdatePullRequest*             ## edit PR title/desc/targets/state
              - codecommit:MergePullRequestByFastForward  ## merge PR (fast-forward)
              - codecommit:MergePullRequestBySquash       ## merge PR (squash)
              - codecommit:MergePullRequestByThreeWay     ## merge PR (3-way)
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CI/CD Orchestration: operate CodePipeline executions (no pipeline admin)
          ## -------------------------------------------------------------------
          - Sid: CodePipelineOperations
            Effect: Allow
            Action:
              - codepipeline:Get*                    ## read pipeline state/executions/artifacts
              - codepipeline:List*                   ## enumerate pipelines/executions
              - codepipeline:StartPipelineExecution  ## start a pipeline run
              - codepipeline:StopPipelineExecution   ## stop/cancel a running execution
              - codepipeline:RetryStageExecution     ## retry a failed stage
              - codepipeline:PutApprovalResult       ## approve/reject a manual approval action
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Messaging — SNS publish/read
          ## -------------------------------------------------------------------
          - Sid: SnsPublishAndRead
            Effect: Allow
            Action:
              - sns:Publish               ## publish a message to a topic
              - sns:Get*                  ## read topic/subscription attributes/policies
              - sns:List*                 ## list topics/subscriptions
              - sns:ConfirmSubscription   ## confirm a pending subscription
            Resource: "arn:aws:sns:*:*:network-*"

          ## -------------------------------------------------------------------
          ## Messaging — SNS minimal writes (scoped to network-*)
          ## -------------------------------------------------------------------
          - Sid: SnsOpsMinimalWrites
            Effect: Allow
            Action:
              - sns:Subscribe     ## create a subscription to an allowed topic
              - sns:Unsubscribe   ## remove a subscription from an allowed topic
            Resource:
              - arn:aws:sns:*:*:network-*     ## only topics with name prefix network-*
              - arn:aws:sns:*:*:network-*:*   ## and their subscriptions/endpoints

          ## -------------------------------------------------------------------
          ## Messaging — SQS consume/read
          ## -------------------------------------------------------------------
          - Sid: SqsConsumeAndRead
            Effect: Allow
            Action:
              - sqs:ReceiveMessage        ## receive/consume messages
              - sqs:SendMessage           ## send/test messages into a queue
              - sqs:GetQueueAttributes    ## read queue attributes (e.g., DLQ, visibility)
              - sqs:GetQueueUrl           ## resolve queue URL by name
              - sqs:ListQueues            ## list queues in the account/region
            Resource: "arn:aws:sns:*:*:network-*"

          ## -------------------------------------------------------------------
          ## Messaging — SQS minimal writes (scoped to network-*)
          ## -------------------------------------------------------------------
          - Sid: SqsOpsMinimalWrites
            Effect: Allow
            Action:
              - sqs:DeleteMessage             ## delete (ack) a received message
              - sqs:ChangeMessageVisibility   ## extend/shorten visibility timeout in-flight
            Resource:
              - arn:aws:sqs:*:*:network-*     ## only queues with name prefix network-*

## -------------------------------------------------------------------------- ##

Outputs:

  NetworkAllowOrchestrationPolicyArn:
    Description: "ARN of the Development Source & Orchestration allow IAM managed policy"
    Value: !Ref NetworkAllowOrchestrationPolicy
